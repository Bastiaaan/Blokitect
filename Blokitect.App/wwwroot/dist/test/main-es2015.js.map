{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about-us/about-us.component.ts","./src/app/about-us/about-us.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/open-projects/open-projects.component.ts","./src/app/open-projects/open-projects.component.html","./src/app/private-register/private-register.component.ts","./src/app/private-register/private-register.component.html","./src/app/project/project.component.ts","./src/app/project/project.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/interceptors/authInterceptor.ts","./src/interceptors/languageInterceptor.ts","./src/main.ts","./src/models/contactPerson-model.ts","./src/models/enums.ts","./src/models/login-model.ts","./src/models/register-model.ts","./src/services/auth.guard.ts","./src/services/auth.service.ts","./src/services/helper.service.ts","./src/services/language.service.ts","./src/services/project.service.ts","./src/services/service.ts","./src/services/supplier.service.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\r\n\n@Component({\n  selector: 'app-about-us',\n  templateUrl: './about-us.component.html',\n  styleUrls: ['./about-us.component.scss']\n})\nexport class AboutUsComponent implements OnInit {\n\n  constructor(private helperService: HelperService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Wie zijn wij?</h2>\n<p>Blokitect is een bemiddelingsplatform waar vraag en aanbod te pas komen op het gebied van software development. <br />\n  Ons platform maakt van jouw vragen een duidelijk project voor de ontwikkelaars die van ons platform gebruikmaken.\n  </p>\n\n<h3>Geen plan is te groot</h3>\n<p>Bij ons kan je terecht als zowel particulier als eigenaar van een groot bedrijf.\n\n  Commissie;<br />\n  20% van projectkosten<br />\n  10% bij abonnementskosten</p>\n\n<table class=\"w-50\">\n  <tbody>\n    <tr>\n      <td>Tel. Number</td>\n      <td>010 - 34566246</td>\n    </tr>\n    <tr>\n      <td>Email</td>\n      <td>info@blokitect.com</td>\n    </tr>\n  </tbody>\n</table>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { OpenProjectsComponent } from './open-projects/open-projects.component';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\r\nimport { AuthGuard } from '../services/auth.guard';\r\nimport { PrivateRegisterComponent } from './private-register/private-register.component';\r\n\r\nconst routes: Routes = [\r\n  { component: HomeComponent, path: 'nl' },\r\n  { component: RegisterComponent, path: 'register' },\r\n  { component: LoginComponent, path: 'login' },\r\n  { component: DashboardComponent, path: 'dashboard/{userGuid}', canActivate: [AuthGuard] },\r\n  { component: OpenProjectsComponent, path: 'projects', canActivate: [AuthGuard] },\r\n  { component: AboutUsComponent, path: 'about' },\r\n  { component: PrivateRegisterComponent, path: 'register/private' },\r\n];\r\n\r\nconst languages = [ //{lang}\r\n  'NL', //Dutch\r\n  'EN', //English\r\n  'DE', //German\r\n  'FR', //French\r\n  'ES', //Spanish\r\n  'IT', //Italian\r\n  'RU', //Russian\r\n  'UK', //Ukranian\r\n  'HI', //Hindi\r\n  'CN', //Chinese\r\n  'KO', //Korean\r\n  'JP', //Japanese\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { paramsInheritanceStrategy: 'always' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LanguageService } from '../services/language.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'MyBlokitect';\r\n  languageService: LanguageService;\r\n\r\n  ngOnInit() {\r\n    this.languageService = new LanguageService();\r\n    console.log(this.route.fragment);\r\n    let selectedLang = this.route.params['lang'];\r\n    if (selectedLang !== undefined) {\r\n      this.route.params.subscribe((data) => {\r\n        console.log(selectedLang);\r\n      });\r\n    } else {\r\n      console.log('language input in route is zero');\r\n    }\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute) {\r\n  }\r\n}\r\n","\r\n<div id=\"blokitect-header\">\r\n  <div id=\"nav-parts\">\r\n    <img id=\"site-logo\" alt=\"Blokitect - From idea to concrete plan\" src=\"../assets/images/blokitect_light.png\" />\r\n    <ul>\r\n      <li><a class=\"active\" [routerLink]=\"['']\">Home</a></li>\r\n      <li><a [routerLink]=\"['about']\">About</a></li>\r\n      <li><a [routerLink]=\"['register']\">Register</a></li>\r\n      <li><a [routerLink]=\"['login']\">Login</a></li>\r\n    </ul>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"container\">\r\n  <section>\r\n    <article>\r\n      <h1 i18n=\"Card header|an introduction header for this sample\">Welcome to our platform</h1>\r\n      <p i18n=\"Card description|Intro description\">Our goal is to make sure that your project has been matched to the best developers for your type of project</p>\r\n    </article>\r\n  </section>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { CommonModule } from '@angular/common';\r\n//import { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { PrivateRegisterComponent } from './private-register/private-register.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { OpenProjectsComponent } from './open-projects/open-projects.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { AboutUsComponent } from './about-us/about-us.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { AuthInterceptor } from '../interceptors/authInterceptor';\r\nimport { LanguageInterceptor } from '../interceptors/languageInterceptor';\r\n \r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    PrivateRegisterComponent,\r\n    HomeComponent,\r\n    ProjectComponent,\r\n    OpenProjectsComponent,\r\n    DashboardComponent,\r\n    AboutUsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MatTabsModule,\r\n    //TranslateModule.forRoot(),\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  exports: [\r\n    //TranslateModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true,\r\n    }, {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: LanguageInterceptor,\r\n      multi: true,\r\n    }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './../../services/auth.service';\nimport { ProjectViewModel } from '../../models/project-model';\nimport { CustomerViewModel } from '../../models/customer-model';\nimport { SupplierViewModel } from '../../models/supplier-model';\nimport { Router } from '@angular/router';\r\nimport { ProjectService } from '../../services/project.service';\r\nimport { SupplierService } from '../../services/supplier.service';\r\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  authService: AuthService;\n\n  projectService: ProjectService;\n\n  supplierService: SupplierService;\n\n  model: {\n    project: ProjectViewModel;\n    customer: CustomerViewModel;\n    supplier: SupplierViewModel;\n  };\n\n  constructor(private router: Router, authService: AuthService, projectSerivce: ProjectService, supplierService: SupplierService) {\n    this.authService = authService;\n    this.projectService = projectSerivce;\n    this.supplierService = supplierService;\n  }\n\n  ngOnInit(): void {\n    const token = localStorage.getItem('token');\n    this.authService.isAuthenticated(token);\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { HelperService } from '../../services/helper.service';\r\nimport { ComponentViewModel } from './../../models/component-model';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private helperService: HelperService, private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    console.log(this.activatedRoute);\n  }\n\n}\n","\r\n\r\n<h2>Welcome dear customer</h2>\r\n<p>Please provide us some project information for the creation of the coders' 'blueprint'</p>\r\n","import { Component, Input, OnInit, Inject } from '@angular/core';\nimport { LoginViewModel } from './../../models/login-model';\nimport { HelperService } from '../../services/helper.service';\r\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  @Input() model: LoginViewModel;\n\n  constructor(private helperService: HelperService) {\n  }\n\n  ngOnInit(): void {\n    // TODO: Determine on URL basis if a producer or customer is signing in\n    this.model = new LoginViewModel();\n  }\n\n  submitLogin() {\n    console.log('submit works');\r\n  }\n\n}\n","<div class=\"container mb-4\">\n  <h2>Login</h2>\n  <form (ngSubmit)=\"submitLogin()\" enctype=\"multipart/form-data\" method=\"post\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <input type=\"text\" [(ngModel)]=\"model.emailOrUsername\" id=\"emailOrUsername\" name=\"emailOrUsername\" placeholder=\"username\" class=\"m-1 w-100 form-control\" />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <input type=\"password\" [(ngModel)]=\"model.password\" id=\"password\" name=\"password\" placeholder=\"password\" class=\"m-1 w-100 form-control\" />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <label>Onthoud mij: </label> <input [(ngModel)]=\"model.rememberMe\" name=\"rememberMe\" id=\"rememberMe\" type=\"checkbox\" />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12 m-2\">\n        <input type=\"submit\" class=\"btn btn-warning w-100 m-1 m-auto\" value=\"Sign in\" />\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-open-projects',\n  templateUrl: './open-projects.component.html',\n  styleUrls: ['./open-projects.component.scss']\n})\nexport class OpenProjectsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>open-projects works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-private-register',\n  templateUrl: './private-register.component.html',\n  styleUrls: ['./private-register.component.scss']\n})\nexport class PrivateRegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>private-register works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>project works!</p>\n<div class=\"row\">\n  <div class=\"col-md-4 software-option\">\n    Web -applicatie \n  </div>\n\n  <div class=\"col-md-4 software-option\">\n    mobile- app\n  </div>\n\n  <div class=\"col-md-4 software-option\">\n    Custom software\n  </div>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { RegisterViewModel } from './../../models/register-model';\nimport { ContactPersonCreateViewModel } from './../../models/contactPerson-model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n//import { faPlusCircle } from 'font-awesome/fonts';\nimport { HelperService } from '../../services/helper.service';\nimport { AuthService } from '../../services/auth.service';\r\nimport { UserRole } from '../../models/enums';\r\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\n@Inject(AuthService)\nexport class RegisterComponent implements OnInit {\n\n  //faPlusCircle = faPlusCircle;\n  model: RegisterViewModel;\n  authService: AuthService;\n  agreed: boolean;\n\n  constructor(private helperService: HelperService, private route: ActivatedRoute, private router: Router, authService: AuthService) {\n    this.authService = authService;\n  }\n\n  ngOnInit(): void {\n    this.model = new RegisterViewModel();\n\n    this.model.userRole = UserRole.Customer;\n    this.model.contactPeople = [];\n    this.model.contactPeople[0] = new ContactPersonCreateViewModel();\n  }\n\n  addNewContactPerson() {\n    const newIndex = this.model.contactPeople.length;\n    this.model.contactPeople[newIndex] = new ContactPersonCreateViewModel();\r\n  }\n\n  register() {\n    this.authService.register(this.model);\r\n  }\n\n}\n","\n<h2>Nieuw bedrijf aanmelden</h2>\n<div class=\"container\">\n  <form method=\"post\" (ngSubmit)=\"register()\" enctype=\"multipart/form-data\">\n    <mat-tab-group [backgroundColor]=\"'danger'\" [color]=\"'default'\">\n      <mat-tab label=\"Bedrijfsgegevens\">\n        <div class=\"row mt-4\">\n          <p>Wanneer je niet bereikbaar bent en een leverancier zijn diensten aanbiedt. Kan het zo zijn dat we genoodzaakt zijn om naar het algemene email te versturen</p>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <input type=\"text\" [(ngModel)]=\"model.companyName\" name=\"companyname\" class=\"form-control w-100 mb-2 mt-2\" placeholder=\"*Bedrijfsnaam\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <input type=\"text\" [(ngModel)]=\"model.chamberOfCommerceNumber\" name=\"chamber-of-commerce-number\" class=\"form-control w-100 mb-2 mt-2\" placeholder=\"*KVK-nummer\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <input type=\"text\" [(ngModel)]=\"model.vatNumber\" name=\"vat-number\" class=\"form-control w-100 mb-2 mt-2\" placeholder=\"*BTW-nummer\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <input type=\"text\" [(ngModel)]=\"model.generalEmail\" name=\"generalemail\" class=\"form-control w-100 mb-2 mt-2\" placeholder=\"*Algemene emailadres\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <input type=\"text\" [(ngModel)]=\"model.phoneNumber\" name=\"phone-number\" class=\"form-control w-100 mb-2 mt-2\" placeholder=\"*Tel. nummer\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <input type=\"text\" name=\"website\" [(ngModel)]=\"model.website\" class=\"form-control w-100 mb-2 mt-2\" placeholder=\"Website (optioneel)\" />\n          </div>\n        </div>\n      </mat-tab>\n      <mat-tab label=\"Informatie over bedrijf\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <span>\n              Om snel benaderd te kunnen worden,\n              vragen wij je om hieronder je bedrijfsactiviteiten te omschrijven en in welke sector je bedrijf actief is zodat het\n              voor opdrachtnemers duidelijk is wat ze moeten doen en wat ze kunnen verwachten\n            </span>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <input type=\"text\" placeholder=\"Actieve sector(en). scheiden door komma's\" [(ngModel)]=\"model.sectors\" class=\"form-control mt-4 mb-2\" name=\"sectors\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <textarea class=\"form-control\" id=\"company_description\" name=\"company-activities\" [(ngModel)]=\"model.activities\" placeholder=\"Omschrijf je bedrijfsactiviteiten\"></textarea>\n          </div>\n        </div>\n      </mat-tab>\n      <mat-tab label=\"Contactpersonen\">\n\n        <!-- Iterating each contactperson added in the array --> \n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <button (click)=\"addNewContactPerson()\" class=\"btn btn-warning mb-4 mt-2 float-right\">\n              <!--<fa-icon [icon]=\"faPlusCircle\"></fa-icon> --> Nieuw contactpersoon\n            </button>\n          </div>\n        </div>\n\n        <div class=\"tab\" *ngFor=\"let contactperson of model.contactPeople\">\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <input type=\"text\" [(ngModel)]=\"contactperson.firstname\" class=\"form-control w-100 mb-2\" name=\"firstname\" placeholder=\"Voornaam\" />\n            </div>\n            <div class=\"col-md-6\">\n              <input type=\"text\" [(ngModel)]=\"contactperson.lastname\" class=\"form-control w-100 mb-2\" name=\"lastname\" placeholder=\"Achternaam\" />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-9\">\n              <input type=\"text\" [(ngModel)]=\"contactperson.email\" class=\"form-control w-100 mb-2\" name=\"email-address\" placeholder=\"E-mailadres\" />\n            </div>\n            <div class=\"col-md-3\">\n              <input type=\"number\" [(ngModel)]=\"contactperson.phoneNumber\" class=\"form-control w-100 mb-2\" name=\"phone-number\" placeholder=\"Tel. nummer\" />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-7\">\n              <input type=\"text\" class=\"form-control w-100 mb-2\" placeholder=\"Functie\" />\n            </div>\n            <div *ngIf=\"model.contactPeople[0] === contactperson\" class=\"col-md-5\">\n              <label>Ik ben de hoofdpersoon: <input type=\"checkbox\" name=\"main-contact\" [(ngModel)]=\"contactperson.isMainContact\" class=\"ml-2\" /></label>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\" *ngIf=\"model.contactPeople.length > 1\">\n          <ul class=\"list-inline\" id=\"contact-people-map\">\n            <li *ngFor=\"let person of model.contactPeople; let i = index\" class=\"contactperson-tabs\"  [attr.data-index]=\"i\" data-toggle=\"show\">\n              [ {{i + 1}} ]\n            </li>\n          </ul>\n        </div>\n\n        <!-- End of session -->\n\n      </mat-tab>\n      <mat-tab label=\"Algemene voorwaarden\">\n        <div class=\"row mt-3\">\n          <label>Ik heb de Algemene voorwaarden grondig doorgenomen en ga hiermee akkoord: <input type=\"checkbox\" name=\"agreed\" [(ngModel)]=\"agreed\" /></label>\n          <div class=\"col-md-12 mt-3\" *ngIf=\"agreed === true\">\n            <input type=\"submit\" value=\"Registreren\" class=\"btn btn-warning w-100\" />\n          </div>\n        </div>\n      </mat-tab>\n    </mat-tab-group>\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n      <!--<input type=\"text\" [(ngModel)]=\"model.\" class=\"form-control w-100\" placeholder=\"\" />-->\n      </div>\n    </div>\n  </form>\n  <div class=\"row mt-2\">\n    <div class=\"col-md-12\">\n      <p>Heb je geen bedrijf, maar heb je wel ideeën? Dan kan je ook als <a [routerLink]=\"'private'\">particulier</a> aanmelden!</p>\n    </div>\n  </div>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  endPoints: {\r\n    api: 'https://localhost:44392/api/'\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n}\r\n","import { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LanguageInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    //req.\r\n    //next.\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","\r\nimport { CompanyViewModel } from './company-model';\r\r\nexport class ContactPersonViewModel {  \r\n    public firstname: string; \r\n \r\n    public lastname: string; \r\n \r\n    public email: string; \r\n \r\n    public phoneNumber: number; \r\n \r\n    public supervisor: ContactPersonViewModel; \r\n \r\n    public isSupervisor: boolean; \r\n \r\n    public isMainContact: boolean; \r\n \r\n    public companyId: number; \r\n \r\n    public company: CompanyViewModel; \r\n\r\n}\r\r\nexport class ContactPersonEditViewModel extends ContactPersonViewModel {  \r\n    public password: string; \r\n \r\n    public confirmPassword: string; \r\n\r\n}\r\r\nexport class ContactPersonCreateViewModel extends ContactPersonViewModel {  \r\n    public password: string; \r\n \r\n    public confirmPassword: string; \r\n\r\n}\r\n","\r\nexport enum Priority { \r\n    Low = 0,\r\n    High = 1\r\n}\r\n\r\nexport enum ReturnValue { \r\n    Int = 0,\r\n    String = 1,\r\n    DateTime = 2,\r\n    TimeStamp = 3,\r\n    Decimal = 4,\r\n    Bytes = 5\r\n}\r\n\r\nexport enum SupplierType { \r\n    Accountancy = 0,\r\n    Engineering = 1,\r\n    IT = 2,\r\n    Software = 3\r\n}\r\n\r\nexport enum UserRole { \r\n    Admin = 0,\r\n    Customer = 1,\r\n    Supplier = 2\r\n}\r\n\r\nexport enum TokenProvider { \r\n    Admin = 0,\r\n    Customer = 1,\r\n    Supplier = 2,\r\n    Temporary = 3\r\n}\r\n\r\n ","\r\n\r\nexport class LoginViewModel {  \r\n    public emailOrUsername: string; \r\n \r\n    public password: string; \r\n \r\n    public rememberMe: boolean; \r\n\r\n}\r\n","\r\nimport { UserRole, } from './enums';\r\r\nimport { ContactPersonCreateViewModel } from './contactPerson-model';\r\r\nexport class RegisterViewModel {\r\n  public companyName: string;\r\n\r\n  public chamberOfCommerceNumber: number;\r\n\r\n  public vatNumber: number;\r\n\r\n  public generalEmail: string;\r\n\r\n  public phoneNumber: number;\r\n\r\n  public website: string;\r\n\r\n  public sectors: string;\r\n\r\n  public activities: string;\r\n\r\n  public contactPeople: ContactPersonCreateViewModel[];\r\n\r\n  public userRole: UserRole;\r\n\r\n}\r\n\r\n","import { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport class AuthGuard implements CanActivate\r\n{\r\n  constructor(private router: Router, private authService: AuthService) {\r\n\r\n  }\r\n\r\n  canActivate(): Observable<boolean> | boolean {\r\n\r\n    const availableToken = localStorage.getItem('authToken');\r\n    if (availableToken !== null) {\r\n      if (this.authService.isAuthenticated(localStorage.getItem('authToken'))) {\r\n        return true;\r\n      }\r\n      console.error('Token not found. Error 404');\r\n      return false;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\n","import { Inject, Injectable } from '@angular/core'\r\nimport { Service } from './service';\r\nimport { Router } from '@angular/router';\r\nimport { LoginViewModel } from '../models/login-model';\r\nimport { RegisterViewModel } from '../models/register-model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService extends Service {\r\n\r\n  router: Router;  \r\n  \r\n  constructor(private api: HttpClient, router: Router) {\r\n    super(\"auth\");\r\n    this.router = router;\r\n  }\r\n\r\n  login(viewModel: LoginViewModel): any {\r\n    this.addHeader(\"data\", JSON.stringify(viewModel));\r\n    return this.api.post<LoginViewModel>(`${this.apiUrl}login`, this.headers)\r\n      .subscribe((result: any) => {\r\n        result.success !== false\r\n          ? localStorage.setItem('authToken', null)\r\n          : console.error('wrong login attempt');\r\n\r\n        const token = localStorage.getItem('authToken');\r\n        if (token !== null) {\r\n          this.router.navigateByUrl(`dashboard/${token}`);\r\n        }\r\n      });\r\n  }\r\n\r\n  register(viewModel: RegisterViewModel): any {\r\n    this.addHeader(\"viewModel\", viewModel);\r\n    return this.api.post(`${this.apiUrl}register`, viewModel)\r\n      .subscribe((data: any) => {\r\n        console.log(data);\r\n      });\r\n  }\r\n\r\n  logout(): any {\r\n    this.api.post(`${this.apiUrl}/logout`, this.headers).pipe();\r\n    localStorage.removeItem('token');\r\n  }\r\n\r\n  isAuthenticated(token: string): Observable<boolean> {\r\n    return this.api.post<string>(`${this.apiUrl}${token}`, this.headers)\r\n      .pipe((result: any) => {\r\n        return result.success ?? false;\r\n        //handleError();\r\n      });\r\n  }\r\n\r\n  isAuthorized(): boolean {\r\n    return false;\r\n  }\r\n}\r\n","import * as $ from 'jquery';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HelperService {\r\n\r\n  constructor(private router: Router) {\r\n    this.determineActiveNav(this.router.url);\r\n  }\r\n\r\n  determineActiveNav(url: string) {\r\n\r\n    $('#nav-menu li a').each(function () {\r\n      let _this = $(this);\r\n      if (url === _this.attr('href')) {\r\n        _this.addClass('active');\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LanguageService {\r\n\r\n  constructor() {\r\n    var localizationData = this.fetchCountry();\r\n    console.log(localizationData);\r\n    localStorage.setItem('language', this.fetchCountry());\r\n  }\r\n\r\n  selectLanguage(language: string) {\r\n    localStorage.setItem('language', language);\r\n  }\r\n\r\n  obtainLocation(position) {\r\n    let latitude = position.coords.latitude;\r\n    let longitude = position.coords.longitude;\r\n\r\n    this.reserveGeoCodingWithGoogle(longitude, latitude);\r\n  }\r\n\r\n  reserveGeoCodingWithGoogle(latitude, longitude) {\r\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?\r\n      latlng=${latitude},${longitude}&key={GOOGLE_MAP_KEY}`)\r\n      .then(res => res.json())\r\n      .then(response => {\r\n        console.log(`User's location: ${response}`)\r\n      })\r\n      .catch(status => {\r\n        console.log(`Request failed: Returned a status of ${status}`);\r\n      })\r\n  }\r\n\r\n  fetchCountry(): any {\r\n    return fetch('https://extreme-ip-lookup.com/json/')\r\n      .then(res => res.json())\r\n      .then(response => {\r\n        return response.countryCode;\r\n      })\r\n      .catch(data => {\r\n        console.log('Request failed');\r\n      });\r\n  }\r\n}\r\n","import { Service } from './service';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService extends Service {\r\n\r\n  constructor(private api: HttpClient) {\r\n    super('project');\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { environment } from '../environments/environment';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Service {\r\n\r\n  protected apiUrl: string;\r\n  protected headers: {  } = [];\r\n\r\n  constructor(@Inject(String) serviceName: string) {\r\n    serviceName === null ? this.apiUrl : this.apiUrl = `${environment.endPoints.api}${serviceName}/`;\r\n    this.addHeader('Content-Type', 'Application/json');\r\n    this.addHeader('Accept', 'Application/json');\r\n  }\r\n\r\n  protected addHeader(key: string, value: any) {\r\n    this.headers[key] = value;\r\n  }\r\n\r\n  protected removeHeader(key: string) {\r\n    if (this.headerExists(key)) {\r\n      this.headers[key] = null;\r\n    }\r\n\r\n    throw new Error(`the key ${key} is not found`);\r\n  }\r\n\r\n  protected headerExists(key: string): boolean {\r\n    return this.headers[key] !== null;\r\n  }\r\n\r\n  protected handleError(error: HttpErrorResponse) {\r\n    return throwError(error);\r\n  }\r\n}\r\n\r\n\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ProjectService } from './project.service';\r\nimport { Service } from './service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupplierService extends Service {\r\n  constructor() {\r\n    super('supplier');\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}